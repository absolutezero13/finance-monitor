{"version":3,"sources":["Components/Header.js","context/AppReducer.js","context/GlobalState.js","Components/Balance.js","Components/IncomeExpenses.js","Components/Transaction.js","Components/TransactionList.js","Components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payLoad","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87188c5e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div>\r\n      <h2>Finance Monitor</h2>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payLoad\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payLoad, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n// Inıtial state\r\nconst initialState = {\r\n  transactions: [],\r\n};\r\n\r\n// create context\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nconst GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n  //Actions\r\n  const deleteTransaction = (id) => {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payLoad: id,\r\n    });\r\n  };\r\n\r\n  const addTransaction = (transaction) => {\r\n    dispatch({\r\n      type: \"ADD_TRANSACTION\",\r\n      payLoad: transaction,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n  return (\r\n    <div>\r\n      <h4>Your Balance</h4>\r\n      <h1>£{total}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => acc + item, 0)\r\n    .toFixed(2);\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => acc + item, 0) * -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p id=\"money-plus\" className=\"money plus\">\r\n          £{income}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p id=\"money-minus\" className=\"money minus\">\r\n          £{expense}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nconst Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n  return (\r\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n      {transaction.text}\r\n      <span>\r\n        {sign}£{Math.abs(transaction.amount)}\r\n      </span>\r\n      <button\r\n        className=\"delete-btn\"\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  return (\r\n    <div>\r\n      <h3>History</h3>\r\n      <ul id=\"list\" className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 9999),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n    if (text && amount) {\r\n      addTransaction(newTransaction);\r\n      setText(\"\");\r\n      setAmount(0);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit} id=\"form\">\r\n        <div className=\"form-control\">\r\n          {!text ? <p> Please insert a text for expense</p> : null}\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            id=\"text\"\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            id=\"amount\"\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import \"./App.css\";\nimport Header from \"./Components/Header\";\nimport Balance from \"./Components/Balance\";\nimport IncomeExpenses from \"./Components/IncomeExpenses\";\nimport TransactionList from \"./Components/TransactionList\";\nimport AddTransaction from \"./Components/AddTransaction\";\nimport GlobalProvider from \"./context/GlobalState\";\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}